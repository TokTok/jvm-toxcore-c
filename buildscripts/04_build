#!/usr/bin/env perl


system("echo '================================' >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");
system("echo $0 >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");



use strict;
use utf8;
use lib 'buildscripts';

use Data::Dumper;
use Digest::SHA;
use File::Find;

use BuildScript;
my $C = require C;


##############################################################################
#
# :: Install modules.
#
##############################################################################


{
   # Remove any left-over local.sbt.
   my $local_sbt = 'local.sbt';
   unlink $local_sbt;

   # Copy the target-specific SBT configuration if one exists.
   my $local_sbt_config = "buildscripts/android/local.". $C->TARGET . ".sbt";
   must_system "cp", $local_sbt_config, $local_sbt
      if -f $local_sbt_config;
}


my @COMMANDS;

for ($C->TEST_GOAL || '') {
   /coverage/ and push @COMMANDS, (
      'coverage',
      'testOnly *Test',
      'coverageReport',
   );
   /performance/ and push @COMMANDS, (
      'testOnly *TravisBenchSuite',
   );
   /proguard/ and push @COMMANDS, (
      'tox4j/proguard:proguard'
   );
   /^$/ and push @COMMANDS, (
      'scalastyle',
      'test:scalastyle',
      'checkstyle',
      'test:checkstyle',
      'publishLocal',
      'publishM2',
      'makeScripts',
   );
}

# Run SBT commands.
must_system $C->SBT, @COMMANDS;

# Update generated files.
must_system $_ for <bin/Jni*>;
