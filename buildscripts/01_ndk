#!/usr/bin/env perl


system("echo '================================' >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");
system("echo $0 >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");
system("echo '================================' >> /tmp/inst.log");


use strict;
use utf8;
use lib 'buildscripts';

use Cwd 'abs_path';
use File::Path 'remove_tree';

use BuildScript;
my $C = require C;


##############################################################################
#
# :: Download and unpack Android NDK.
#
##############################################################################


my @common = qw(
   build
   sources/android/cpufeatures
   sources/cxx-stl/gnu-libstdc++/4.9/include
   prebuilt/linux-x86_64
   prebuilt/darwin-x86_64
   toolchains/llvm
);

my %NDK_FILES = (
   'aarch64-linux-android' => [@common, qw(
      platforms/android-21/arch-arm64
      prebuilt/android-arm64
      sources/cxx-stl/gnu-libstdc++/4.9/libs/arm64-v8a
      toolchains/aarch64-linux-android-4.9
   )],
   'arm-linux-androideabi' => [@common, qw(
      platforms/android-9
      sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi*
      toolchains/arm-linux-androideabi-4.9
   )],
   'i686-linux-android' => [@common, qw(
      platforms/android-9
      sources/cxx-stl/gnu-libstdc++/4.9/libs/x86
      toolchains/x86-4.9
   )],
   'x86_64-linux-android' => [@common, qw(
      platforms/android-21
      sources/cxx-stl/gnu-libstdc++/4.9/libs/x86_64
      toolchains/x86_64-4.9
   )],
);


my $NDK_DIR = "android-ndk-r13b";
my $NDK_PACKAGE = "$NDK_DIR-$^O-x86_64.zip";

if ($C->HOST ne $C->TARGET) {
   die "No NDK path set" unless defined $C->NDK_HOME;

   # Download NDK package if it wasn't downloaded, yet.
   if (not -f $NDK_PACKAGE) {
      my $url = "http://dl.google.com/android/repository/$NDK_PACKAGE";
      print "Downloading NDK package from $url\n";
      system2 "curl", "-s", $url, "-o", $NDK_PACKAGE;
      if ($?) {
         must_system "wget", "-q", $url;
      }
   }

   # Remove old NDK and left-over extracted dir if one exists.
   remove_tree $NDK_DIR;
   remove_tree $C->NDK_HOME;

   print "Extracting $NDK_PACKAGE...\n";
   my @lines = eval {
      my @files = map { "$NDK_DIR/$_" } @{ $NDK_FILES{$C->TARGET} };
      must_popen "7z", "x", $NDK_PACKAGE, map { "-ir!$_" } @files
   };

   if ($@ =~ /No such file or directory/) {
      # 7z didn't exist, so just unzip the whole archive.
      @lines = must_popen "unzip", $NDK_PACKAGE;
   }

   my $extracted = grep { /^Extracting/ } @lines;
   my $skipped   = grep { /^Skipping/   } @lines;
   my (@rest)    = grep { !/^(Extract|Skipp)ing/ } @lines;
   print "Extracted: $extracted\n";
   print "Skipped: $skipped\n";
   print "$_\n" for @rest;

   # Just so sources/cxx-stl/stlport/../gabi++ works.
   #must_system "mkdir", "$NDK_DIR/sources/cxx-stl/stlport";

   must_system "mv", (abs_path $NDK_DIR), $C->NDK_HOME;
}
