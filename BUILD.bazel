load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_proto_library")
load("@rules_java//java:defs.bzl", "java_proto_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library", "kt_jvm_test")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("//tools/project:build_defs.bzl", "project")

project()

genrule(
    name = "copy_link_jni_md_header",
    srcs = select({
        "//tools/config:freebsd": ["@bazel_tools//tools/jdk:jni_md_header-freebsd"],
        "//tools/config:linux": ["@bazel_tools//tools/jdk:jni_md_header-linux"],
        "//tools/config:osx": ["@bazel_tools//tools/jdk:jni_md_header-darwin"],
        "//tools/config:windows": ["@bazel_tools//tools/jdk:jni_md_header-windows"],
    }),
    outs = ["lib/src/main/cpp/jni_md.h"],
    cmd = "cp -f $< $@",
)

genrule(
    name = "copy_link_jni_header",
    srcs = ["@bazel_tools//tools/jdk:jni_header"],
    outs = ["lib/src/main/cpp/jni.h"],
    cmd = "cp -f $< $@",
)

proto_library(
    name = "jni_proto",
    srcs = [
        "lib/src/main/proto/Av.proto",
        "lib/src/main/proto/Core.proto",
        "lib/src/main/proto/ProtoLog.proto",
    ],
)

cc_proto_library(
    name = "jni_cc_proto",
    deps = [":jni_proto"],
)

java_proto_library(
    name = "jni_java_proto",
    deps = [":jni_proto"],
)

cc_binary(
    name = "libtox4j-c.so",
    srcs = glob([
        "lib/src/main/cpp/**/*.cpp",
        "lib/src/main/cpp/**/*.h",
    ]) + [
        ":lib/src/main/cpp/jni.h",
        ":lib/src/main/cpp/jni_md.h",
    ],
    copts = [
        "-DHAVE_TO_STRING",
    ],
    includes = [
        "lib/src/main/cpp",
        "lib/src/main/proto",
    ],
    linkopts = select({
        "//tools/config:freebsd": ["-Wl,--version-script,$(location lib/src/main/cpp/libtox4j-c.ld)"],
        "//tools/config:linux": ["-Wl,--version-script,$(location lib/src/main/cpp/libtox4j-c.ld)"],
        "//tools/config:osx": [],
        "//tools/config:windows": [],
    }),
    linkshared = True,
    deps = [
        "lib/src/main/cpp/libtox4j-c.ld",
        ":jni_cc_proto",
        "//c-toxcore",
    ],
)

kt_jvm_library(
    name = "jvm-toxcore-c",
    srcs = glob([
        "lib/src/main/java/**/*.java",
        "lib/src/main/java/**/*.kt",
    ]),
    data = ["libtox4j-c.so"],
    deps = [":jni_java_proto"],
)

kt_jvm_test(
    name = "ToxCoreTest",
    size = "small",
    srcs = ["lib/src/test/java/im/tox/tox4j/core/ToxCoreTest.kt"],
    jvm_flags = ["-Djava.library.path=jvm-toxcore-c"],
    test_class = "im.tox.tox4j.core.ToxCoreTest",
    deps = [
        ":jvm-toxcore-c",
        "@maven//:org_jetbrains_kotlin_kotlin_test_junit",
        "@maven//:org_jetbrains_kotlinx_kotlinx_coroutines_core",
    ],
)
